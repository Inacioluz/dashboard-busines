{
  "version": 3,
  "sources": ["browser-external:path", "../../env/lib/env.js", "../../env/package.json", "../../env/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*!\n * env\n * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies\n */\n\nvar path = require('path')\n\n/**\n * Exports\n */\n\nexports = module.exports = createEnv;\n\n/**\n * Env Manager\n */\n\nfunction Env (envfile) {\n  this.envfile = path.join(process.cwd(), envfile || 'env.json')\n  this.evars = (path.existsSync(this.envfile)) ? require(this.envfile) : {}\n  this.id = process.env['ENV_ID']\n}\n\n/**\n * Verify environment variables\n *\n * @param fn callback\n * @api public\n */\n\nEnv.prototype.ok = function (fn) {\n  for (var p in this.evars) {\n    if (!process.env[p]) {\n      var error = new Error(p + ' not defined')\n      console.error(error)\n      fn(error)\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Environment variable getter\n *\n * @param name\n * @api public\n */\n\nEnv.prototype.get = function (name) {\n  // get one\n  if (arguments.length === 1) return process.env[name]\n\n  // get all, multi\n  var evars = (arguments.length === 0) ? Object.keys(this.evars) : Array.prototype.slice.call(arguments)\n  return evars.reduce(function (curr, x) {\n    curr[x] = process.env[x]\n    return curr\n  }, {})\n}\n\n/**\n * Environment variable setter\n *\n * @param name\n * @param value\n * @api public\n */\n\nEnv.prototype.set = function (name, value) {\n  process.env[name] = value\n}\n\n/**\n * Delete environment variable(s)\n *\n * @param name\n * @api public\n */\n\nEnv.prototype.del = function (name) {\n  // get one\n  if (arguments.length === 1) {\n    delete process.env[name]\n  }\n\n  // get all, multi\n  var evars = (arguments.length === 0) ? this.evars : Array.prototype.slice.call(arguments)\n  for (var p in evars) {\n    delete process.env[p]\n  }\n}\n\n/**\n * Instantiate Env\n */\n\nfunction createEnv (envfile) {\n  return new Env(envfile)\n}", "{\n    \"name\": \"env\"\n  , \"version\": \"0.0.2\"\n  , \"description\": \"Environment variable manager\"\n  , \"keywords\": [\"process\", \"environment\", \"env\"]\n  , \"author\": \"Daniel D. Shaw <dshaw@dshaw.com> (http://dshaw.com)\"\n  , \"repository\":{\n        \"type\": \"git\"\n      , \"url\": \"https://github.com/dshaw/env\"\n    }\n  , \"issues\":{\n      \"url\": \"https://github.com/dshaw/env/issues\"\n    }\n  , \"main\": \"index\"\n  , \"directories\" : {\n        \"lib\" : \"lib\"\n      , \"test\" : \"test\"\n    }\n    , \"devDependencies\": {\n      \"tap\": \"0.0.x\"\n    }\n  , \"scripts\" : {\n        \"test\" : \"tap ./test/*.js\"\n    }\n  , \"engines\": { \"node\": \">= 0.5.9\" }\n}\n", "/*!\n * env\n * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>\n * MIT Licensed\n */\n\n/**\n * env\n */\n\nexports = module.exports = require('./lib/env.js');\n\n/**\n * Version\n */\n\nexports.version = require('./package.json').version;\n"],
  "mappings": ";;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,sFAAsF,GAAG,qIAAqI;AAAA,QAC7O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAUA,QAAI,OAAO;AAMX,cAAU,OAAO,UAAU;AAM3B,aAAS,IAAK,SAAS;AACrB,WAAK,UAAU,KAAK,KAAK,QAAQ,IAAI,GAAG,WAAW,UAAU;AAC7D,WAAK,QAAS,KAAK,WAAW,KAAK,OAAO,IAAK,UAAQ,KAAK,OAAO,IAAI,CAAC;AACxE,WAAK,KAAK,QAAQ,IAAI,QAAQ;AAAA,IAChC;AASA,QAAI,UAAU,KAAK,SAAU,IAAI;AAC/B,eAAS,KAAK,KAAK,OAAO;AACxB,YAAI,CAAC,QAAQ,IAAI,CAAC,GAAG;AACnB,cAAI,QAAQ,IAAI,MAAM,IAAI,cAAc;AACxC,kBAAQ,MAAM,KAAK;AACnB,aAAG,KAAK;AACR,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AASA,QAAI,UAAU,MAAM,SAAU,MAAM;AAElC,UAAI,UAAU,WAAW;AAAG,eAAO,QAAQ,IAAI,IAAI;AAGnD,UAAI,QAAS,UAAU,WAAW,IAAK,OAAO,KAAK,KAAK,KAAK,IAAI,MAAM,UAAU,MAAM,KAAK,SAAS;AACrG,aAAO,MAAM,OAAO,SAAU,MAAM,GAAG;AACrC,aAAK,CAAC,IAAI,QAAQ,IAAI,CAAC;AACvB,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAAA,IACP;AAUA,QAAI,UAAU,MAAM,SAAU,MAAM,OAAO;AACzC,cAAQ,IAAI,IAAI,IAAI;AAAA,IACtB;AASA,QAAI,UAAU,MAAM,SAAU,MAAM;AAElC,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,QAAQ,IAAI,IAAI;AAAA,MACzB;AAGA,UAAI,QAAS,UAAU,WAAW,IAAK,KAAK,QAAQ,MAAM,UAAU,MAAM,KAAK,SAAS;AACxF,eAAS,KAAK,OAAO;AACnB,eAAO,QAAQ,IAAI,CAAC;AAAA,MACtB;AAAA,IACF;AAMA,aAAS,UAAW,SAAS;AAC3B,aAAO,IAAI,IAAI,OAAO;AAAA,IACxB;AAAA;AAAA;;;ACxGA;AAAA;AAAA;AAAA,MACI,MAAQ;AAAA,MACR,SAAW;AAAA,MACX,aAAe;AAAA,MACf,UAAY,CAAC,WAAW,eAAe,KAAK;AAAA,MAC5C,QAAU;AAAA,MACV,YAAa;AAAA,QACT,MAAQ;AAAA,QACR,KAAO;AAAA,MACX;AAAA,MACA,QAAS;AAAA,QACP,KAAO;AAAA,MACT;AAAA,MACA,MAAQ;AAAA,MACR,aAAgB;AAAA,QACZ,KAAQ;AAAA,QACR,MAAS;AAAA,MACb;AAAA,MACE,iBAAmB;AAAA,QACnB,KAAO;AAAA,MACT;AAAA,MACA,SAAY;AAAA,QACR,MAAS;AAAA,MACb;AAAA,MACA,SAAW,EAAE,MAAQ,WAAW;AAAA,IACpC;AAAA;AAAA;;;ACzBA,IAAAA,eAAA;AAAA;AAUA,cAAU,OAAO,UAAU;AAM3B,YAAQ,UAAU,kBAA0B;AAAA;AAAA;",
  "names": ["require_env"]
}
