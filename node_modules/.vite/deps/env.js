import {
  __commonJS,
  __require
} from "./chunk-BYPFWIQ6.js";

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/env/lib/env.js
var require_env = __commonJS({
  "node_modules/env/lib/env.js"(exports, module) {
    var path = require_path();
    exports = module.exports = createEnv;
    function Env(envfile) {
      this.envfile = path.join(process.cwd(), envfile || "env.json");
      this.evars = path.existsSync(this.envfile) ? __require(this.envfile) : {};
      this.id = process.env["ENV_ID"];
    }
    Env.prototype.ok = function(fn) {
      for (var p in this.evars) {
        if (!process.env[p]) {
          var error = new Error(p + " not defined");
          console.error(error);
          fn(error);
          return false;
        }
      }
      return true;
    };
    Env.prototype.get = function(name) {
      if (arguments.length === 1)
        return process.env[name];
      var evars = arguments.length === 0 ? Object.keys(this.evars) : Array.prototype.slice.call(arguments);
      return evars.reduce(function(curr, x) {
        curr[x] = process.env[x];
        return curr;
      }, {});
    };
    Env.prototype.set = function(name, value) {
      process.env[name] = value;
    };
    Env.prototype.del = function(name) {
      if (arguments.length === 1) {
        delete process.env[name];
      }
      var evars = arguments.length === 0 ? this.evars : Array.prototype.slice.call(arguments);
      for (var p in evars) {
        delete process.env[p];
      }
    };
    function createEnv(envfile) {
      return new Env(envfile);
    }
  }
});

// node_modules/env/package.json
var require_package = __commonJS({
  "node_modules/env/package.json"(exports, module) {
    module.exports = {
      name: "env",
      version: "0.0.2",
      description: "Environment variable manager",
      keywords: ["process", "environment", "env"],
      author: "Daniel D. Shaw <dshaw@dshaw.com> (http://dshaw.com)",
      repository: {
        type: "git",
        url: "https://github.com/dshaw/env"
      },
      issues: {
        url: "https://github.com/dshaw/env/issues"
      },
      main: "index",
      directories: {
        lib: "lib",
        test: "test"
      },
      devDependencies: {
        tap: "0.0.x"
      },
      scripts: {
        test: "tap ./test/*.js"
      },
      engines: { node: ">= 0.5.9" }
    };
  }
});

// node_modules/env/index.js
var require_env2 = __commonJS({
  "node_modules/env/index.js"(exports, module) {
    exports = module.exports = require_env();
    exports.version = require_package().version;
  }
});
export default require_env2();
/*! Bundled license information:

env/lib/env.js:
  (*!
   * env
   * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>
   * MIT Licensed
   *)

env/index.js:
  (*!
   * env
   * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>
   * MIT Licensed
   *)
*/
//# sourceMappingURL=env.js.map
